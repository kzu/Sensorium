namespace System.Reactive
{
    using System;

    /// <summary>
    /// Represents a .NET event invocation consisting of the weakly typed object that raised the event and the data that was generated by the event.
    /// </summary>
    /// <typeparam name="TEventArgs">The type of the event data generated by the event.</typeparam>
    public class EventPattern<TEventArgs> : EventPattern<object, TEventArgs>
    {
        /// <summary>
        /// Creates a new data representation instance of a .NET event invocation with the given sender and event data.
        /// </summary>
        /// <param name="sender">The sender object that raised the event.</param>
        /// <param name="e">The event data that was generated by the event.</param>
        public EventPattern(object sender, TEventArgs e)
            : base(sender, e)
        {
        }
    }
}